package com.projeto.faceBuy.config;

import java.text.SimpleDateFormat;
import java.util.Arrays;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;

import com.projeto.faceBuy.entities.Categoria;
import com.projeto.faceBuy.entities.Cidade;
import com.projeto.faceBuy.entities.CotacaoCompra;
import com.projeto.faceBuy.entities.CotacaoCompraItem;
import com.projeto.faceBuy.entities.Estado;
import com.projeto.faceBuy.entities.Fornecedor;
import com.projeto.faceBuy.entities.FornecedorCotacaoCompra;
import com.projeto.faceBuy.entities.FornecedorCotacaoCompraItem;
import com.projeto.faceBuy.entities.Funcionario;
import com.projeto.faceBuy.entities.NotaFiscal;
import com.projeto.faceBuy.entities.NotaFiscalItem;
import com.projeto.faceBuy.entities.OrdemCompra;
import com.projeto.faceBuy.entities.OrdemCompraItem;
import com.projeto.faceBuy.entities.Produto;
import com.projeto.faceBuy.entities.TipoFuncionario;
import com.projeto.faceBuy.repositories.CategoriaRepository;
import com.projeto.faceBuy.repositories.CidadeRepository;
import com.projeto.faceBuy.repositories.CotacaoCompraItemRepository;
import com.projeto.faceBuy.repositories.CotacaoCompraRepository;
import com.projeto.faceBuy.repositories.EstadoRepository;
import com.projeto.faceBuy.repositories.FornecedorCotacaoCompraItemRepository;
import com.projeto.faceBuy.repositories.FornecedorCotacaoCompraRepository;
import com.projeto.faceBuy.repositories.FornecedorRepository;
import com.projeto.faceBuy.repositories.FuncionarioRepository;
import com.projeto.faceBuy.repositories.NotaFiscalItemRepository;
import com.projeto.faceBuy.repositories.NotaFiscalRepository;
import com.projeto.faceBuy.repositories.OrdemCompraItemRepository;
import com.projeto.faceBuy.repositories.OrdemCompraRepository;
import com.projeto.faceBuy.repositories.ProdutoRepository;
import com.projeto.faceBuy.repositories.TipoFuncionarioRepository;

@Configuration
@Profile("test")
public class TestConfig implements CommandLineRunner {

	SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

	@Autowired
	private ProdutoRepository produtorepository;
	@Autowired
	private FornecedorRepository fornecedorrepository;
	@Autowired
	private CidadeRepository cidaderepository;
	@Autowired
	private EstadoRepository estadorepository;
	@Autowired
	private FuncionarioRepository funcionariorepository;
	@Autowired
	private NotaFiscalRepository nfrepository;
	@Autowired
	private NotaFiscalItemRepository nfitemrepository;
	@Autowired
	private OrdemCompraRepository ocrepository;
	@Autowired
	private OrdemCompraItemRepository ocitemrepository;
	@Autowired
	private TipoFuncionarioRepository tiporepository;
	@Autowired
	private CotacaoCompraRepository cotacomrepository;
	@Autowired
	private CotacaoCompraItemRepository cotaitensrepository;
	@Autowired
	private CategoriaRepository categoriaRepository;
	@Autowired
	private FornecedorCotacaoCompraItemRepository fornecedorCotacaoRepository;
	@Autowired
	private FornecedorCotacaoCompraRepository fornecedorCotacaoCompraRepository;

	SimpleDateFormat dt = new SimpleDateFormat("dd/MM/yyyy");

	@Override
	public void run(String... args) throws Exception {
		Categoria cate1 = new Categoria();
		cate1.setNome("Tecnologia");
		Categoria cate2 = new Categoria();
		cate2.setNome("Materiais de Escritório");
		Categoria cate3 = new Categoria();
		cate3.setNome("Acessórios para Escritório");
		categoriaRepository.saveAll(Arrays.asList(cate1, cate2, cate3));
		Produto p = new Produto();
		p.setNome("Monitor");
		p.setDescrição("Monitor para os computadores do escritório");
		p.setQuantidademin(15);
		p.setEstoque(13);
		p.setCategoria(cate1);
		p.setStatus("Válido");
		Produto p2 = new Produto();
		p2.setNome("Agenda");
		p2.setDescrição("Agenda para os funcionários marcarem seus compromissos");
		p2.setQuantidademin(11);
		p2.setEstoque(35);
		p2.setCategoria(cate2);
		p2.setStatus("Válido");
		Produto p3 = new Produto();
		p3.setNome("Post-it");
		p3.setDescrição("Post-it para marcar compromissos e colar em locais para lembrar");
		p3.setQuantidademin(20);
		p3.setEstoque(52);
		p3.setCategoria(cate2);
		p3.setStatus("Válido");
		Produto p4 = new Produto();
		p4.setNome("Calendário");
		p4.setDescrição("Calendário para visualizar as datas");
		p4.setQuantidademin(8);
		p4.setEstoque(11);
		p4.setCategoria(cate3);
		p4.setStatus("Válido");
		Produto p5 = new Produto();
		p5.setNome("Teclado");
		p5.setDescrição("Teclado para funcionários utilizarem em suas mesas");
		p5.setQuantidademin(14);
		p5.setEstoque(9);
		p5.setCategoria(cate1);
		p5.setStatus("Válido");
		Produto p6 = new Produto();
		p6.setNome("Mouse");
		p6.setDescrição("Mouse para utilizar computador");
		p6.setQuantidademin(8);
		p6.setEstoque(24);
		p6.setCategoria(cate1);
		p6.setStatus("Válido");
		Produto p7 = new Produto();
		p7.setNome("Caderno");
		p7.setDescrição("Caderno para anotações");
		p7.setQuantidademin(21);
		p7.setEstoque(75);
		p7.setCategoria(cate2);
		p7.setStatus("Válido");
		Produto p8 = new Produto();
		p8.setNome("Caneta Azul");
		p8.setDescrição("Caneta para escrever");
		p8.setQuantidademin(20);
		p8.setEstoque(80);
		p8.setCategoria(cate2);
		p8.setStatus("Válido");
		Produto p9 = new Produto();
		p9.setNome("Clipes");
		p9.setDescrição("Clipes para juntar folhas");
		p9.setQuantidademin(25);
		p9.setEstoque(110);
		p9.setCategoria(cate3);
		p9.setStatus("Inválido");
		Produto p1 = new Produto();
		p1.setNome("HD");
		p1.setDescrição("HD para usar nos computadores");
		p1.setQuantidademin(6);
		p1.setEstoque(12);
		p1.setCategoria(cate1);
		p1.setStatus("Inválido");
		produtorepository.saveAll(Arrays.asList(p, p2, p3, p4, p5,p6,p7,p8,p9,p1));
		TipoFuncionario tipo = new TipoFuncionario();
		tipo.setTipo("Funcionario");
		TipoFuncionario tipo2 = new TipoFuncionario();
		tipo2.setTipo("Gerente");
		tiporepository.saveAll(Arrays.asList(tipo, tipo2));
		Fornecedor f = new Fornecedor();
		Fornecedor f2 = new Fornecedor();
		Fornecedor f3 = new Fornecedor();
		f.setCnpj("41562");
		f.setNome("Ponto Frio");
		f.setLogin("ponto123");
		f.setSenha("frio123");
		f.setEmail("pontofrio@gmail.com");
		f2.setCnpj("4124122");
		f2.setNome("Casas Bahia");
		f2.setLogin("casas123");
		f2.setSenha("bahia123");
		f2.setEmail("casasbahia@gmail.com");
		f3.setCnpj("4412432r42");
		f3.setNome("Americanas");
		f3.setLogin("americanas123");
		f3.setSenha("todomundovai");
		f3.setEmail("americanas@gmail.com");
		Cidade c = new Cidade();
		Cidade c2 = new Cidade();
		c.setNome("Araucária");
		c2.setNome("Maringa");
		Estado e = new Estado();
		e.setNome("Paraná");
		f.setCidade(c);
		f2.setCidade(c);
		f3.setCidade(c2);
		c.getFornecedores().add(f);
		c.getFornecedores().add(f2);
		c2.getFornecedores().add(f3);
		estadorepository.save(e);
		c.setEstado(e);
		c2.setEstado(e);
		cidaderepository.saveAll(Arrays.asList(c, c2));
		fornecedorrepository.saveAll(Arrays.asList(f, f2, f3));
		c.getFornecedores().add(f);
		c.getFornecedores().add(f2);
		c2.getFornecedores().add(f3);
		e.getCidades().add(c2);
		e.getCidades().add(c);
		cidaderepository.saveAll(Arrays.asList(c, c2));
		estadorepository.save(e);
		Cidade c3 = new Cidade();
		Cidade c4 = new Cidade();
		c3.setNome("Curitiba");
		c4.setNome("Londrina");
		Estado e2 = new Estado();
		e2.setNome("São Paulo");
		estadorepository.save(e2);
		c3.setEstado(e);
		c4.setEstado(e);
		cidaderepository.saveAll(Arrays.asList(c3, c4));
		estadorepository.save(e2);
		Cidade c5 = new Cidade();
		Cidade c6 = new Cidade();
		c5.setNome("São Paulo");
		c6.setNome("Santo Andre");
		Cidade c7 = new Cidade();
		c7.setNome("Campinas");
		Estado e3 = new Estado();
		e3.setNome("Rio de Janeiro");
		estadorepository.save(e3);
		c5.setEstado(e2);
		c6.setEstado(e2);
		c7.setEstado(e2);
		cidaderepository.saveAll(Arrays.asList(c5, c6,c7));
		Cidade c8 = new Cidade();
		Cidade c9 = new Cidade();
		c8.setNome("Rio de Janeiro");
		c9.setNome("São Gonçalo");
		Cidade c10 = new Cidade();
		c10.setNome("Guarulhos");
		Estado e4 = new Estado();
		e4.setNome("Brasilia");
		estadorepository.save(e4);
		c8.setEstado(e3);
		c9.setEstado(e3);
		c10.setEstado(e2);
		cidaderepository.saveAll(Arrays.asList(c8, c9,c10));
		Cidade c11 = new Cidade();
		Cidade c12 = new Cidade();
		c11.setNome("Brasilia");
		c12.setNome("Salvador");
		Cidade c13 = new Cidade();
		c13.setNome("Fortaleza");
		Estado e5 = new Estado();
		e5.setNome("Bahia");
		Estado e6 = new Estado();
		e6.setNome("Ceara");
		estadorepository.save(e5);
		estadorepository.save(e6);
		c11.setEstado(e4);
		c12.setEstado(e5);
		c13.setEstado(e6);
		cidaderepository.saveAll(Arrays.asList(c11, c12,c13));
		Cidade c14 = new Cidade();
		Cidade c15 = new Cidade();
		c14.setNome("Santos");
		c15.setNome("Pinhais");
		Cidade c16 = new Cidade();
		c16.setNome("Porto Alegre");
		Estado e7 = new Estado();
		e7.setNome("Rio Grande do Sul");
		estadorepository.save(e7);
		c14.setEstado(e2);
		c15.setEstado(e);
		c16.setEstado(e7);
		cidaderepository.saveAll(Arrays.asList(c14, c15,c16));
		Funcionario func = new Funcionario();
		func.setEmail("vini@gmail.com");
		func.setLogin("vini030902");
		func.setNome("Vinicius Crispim de Azevedo");
		func.setSenha("123");
		func.setTelefone("96954-9714");
		func.setTipo(tipo2);
		Funcionario func2 = new Funcionario();
		func2.setEmail("matheusp99@gmail.com");
		func2.setLogin("mat0209");
		func2.setNome("Matheus Pinheiro dos Santos");
		func2.setSenha("mat234");
		func2.setTelefone("98031-3124");
		func2.setTipo(tipo);
		Funcionario func3 = new Funcionario();
		func3.setEmail("davi@gmail.com");
		func3.setLogin("davi123");
		func3.setNome("Davi Lima");
		func3.setSenha("davi123");
		func3.setTelefone("99689-7278");
		func3.setTipo(tipo2);
		Funcionario func4 = new Funcionario();
		func4.setEmail("rodrigo@yahoo.com");
		func4.setLogin("rodrigo");
		func4.setNome("Rodrigo Santos Silva");
		func4.setSenha("rodrigo123");
		func4.setTelefone("9521-7564");
		func4.setTipo(tipo);
		Funcionario func5 = new Funcionario();
		func5.setEmail("celia@gmail.com");
		func5.setLogin("celia");
		func5.setNome("Celia Silva Santos");
		func5.setSenha("celia123");
		func5.setTelefone("93257-8862");
		func5.setTipo(tipo);
		Funcionario func6 = new Funcionario();
		func6.setEmail("carlos458@gmail.com");
		func6.setLogin("carlos");
		func6.setNome("Carlos Peixoto Silveira");
		func6.setSenha("carlos123");
		func6.setTelefone("92477-1569");
		func6.setTipo(tipo);
		Funcionario func7 = new Funcionario();
		func7.setEmail("leilasos@gmail.com");
		func7.setLogin("leila");
		func7.setNome("Leila Damasco Costa");
		func7.setSenha("leila123");
		func7.setTelefone("45689-77778");
		func7.setTipo(tipo);
		Funcionario func8 = new Funcionario();
		func8.setEmail("hellenliss@gmail.com");
		func8.setLogin("hellen");
		func8.setNome("Hellen Julia");
		func8.setSenha("hellen123");
		func8.setTelefone("95632-4752");
		func8.setTipo(tipo);
		funcionariorepository.saveAll(Arrays.asList(func, func2,func3,func4,func5,func6,func7,func8));
		OrdemCompra oc = new OrdemCompra();
		oc.setData("14/11/2021");
		oc.setFornecedor(f);
		oc.setPreco(550.0);
		oc.setNum_pedido(4588L);
		oc.setFuncionario(func2);
		oc.setStatus("Finalizada");
		ocrepository.save(oc);
		OrdemCompra oc2 = new OrdemCompra();
		oc2.setData("10/11/2021");
		oc2.setFornecedor(f3);
		oc2.setNum_pedido(400258L);
		oc2.setPreco(120.0);
		oc2.setFuncionario(func2);
		oc2.setStatus("Pendente");
		ocrepository.save(oc2);
		NotaFiscal nf = new NotaFiscal();
		nf.setData("10/05/2021");
		nf.setNum_pedido(4588L);
		nf.setFornecedor(f);
		nf.setPrecoTotal(600.0);
		nf.setNum_nota(23);
		nf.setFuncionario(func2);
		nf.setHora("18:02");
		NotaFiscal nf2 = new NotaFiscal();
		nf2.setData("20/02/2021");
		nf2.setHora("15:07");
		nf2.setNum_pedido(400258L);
		nf2.setFornecedor(f3);
		nf2.setPrecoTotal(320.0);
		nf2.setNum_nota(12);
		nf2.setFuncionario(func2);
		nfrepository.save(nf);
		nfrepository.save(nf2);
		f.getNotasfiscais().add(nf);
		f3.getNotasfiscais().add(nf2);
		f.getOrdenscompra().add(oc);
		f3.getOrdenscompra().add(oc2);
		fornecedorrepository.save(f);
		fornecedorrepository.save(f3);
		CotacaoCompra coco = new CotacaoCompra();
		String datateste2 = "27/10/2021";
		coco.setFuncionario(func);
		coco.setData(datateste2);
		coco.setStatus("Finalizada");
		CotacaoCompra coco2 = new CotacaoCompra();
		String datateste = "26/10/2021";
		coco2.setFuncionario(func2);
		coco2.setData(datateste);
		coco2.setStatus("Pendente");
		
		cotacomrepository.save(coco);
		cotacomrepository.save(coco2);
		CotacaoCompraItem cotaitens = new CotacaoCompraItem();
		cotaitens.setCotacaocompra(coco);
		cotaitens.setProduto(p5);
		cotaitens.setQuantidade(12);
		CotacaoCompraItem cotaitens2 = new CotacaoCompraItem();
		cotaitens2.setCotacaocompra(coco);
		cotaitens2.setProduto(p2);
		cotaitens2.setQuantidade(20);
		CotacaoCompraItem cotaitens3 = new CotacaoCompraItem();
		cotaitens3.setCotacaocompra(coco2);
		cotaitens3.setProduto(p3);
		cotaitens3.setQuantidade(12);
		cotaitensrepository.saveAll(Arrays.asList(cotaitens, cotaitens2, cotaitens3));
		coco.getCotacaocompraitem().add(cotaitens);
		FornecedorCotacaoCompra fornecedorcotacao = new FornecedorCotacaoCompra();
		fornecedorcotacao.setFornecedor(f3);
		fornecedorcotacao.setData("10//11/2021");
		fornecedorcotacao.setFrete(50.0);
		fornecedorcotacao.setNum_pedido(400258L);
		fornecedorcotacao.setPrecototal(405.0);
		fornecedorcotacao.setCotacaocompra(coco);
		fornecedorcotacao.setStatus("Pendente");
		fornecedorcotacao.setDataEntrega("5 dias úteis");
		FornecedorCotacaoCompra fornecedorcotacao2 = new FornecedorCotacaoCompra();
		fornecedorcotacao2.setFornecedor(f2);
		fornecedorcotacao2.setData("13/11/2021");
		fornecedorcotacao2.setFrete(25.50);
		fornecedorcotacao2.setNum_pedido(14557L);
		fornecedorcotacao2.setPrecototal(2500.0);
		fornecedorcotacao2.setCotacaocompra(coco);
		fornecedorcotacao2.setStatus("Pendente");
		fornecedorcotacao2.setDataEntrega("10 dias úteis");
		FornecedorCotacaoCompra fornecedorcotacao3 = new FornecedorCotacaoCompra();
		fornecedorcotacao3.setFornecedor(f3);
		fornecedorcotacao3.setData("8/11/2021");
		fornecedorcotacao3.setPrecototal(300.0);
		fornecedorcotacao3.setFrete(20.0);
		fornecedorcotacao3.setNum_pedido(4588L);
		fornecedorcotacao3.setCotacaocompra(coco2);
		fornecedorcotacao3.setStatus("Pendente");
		fornecedorcotacao3.setDataEntrega("4 dias úteis");
		fornecedorCotacaoCompraRepository.saveAll(Arrays.asList(fornecedorcotacao, fornecedorcotacao2,fornecedorcotacao3));
		CotacaoCompra coco3 = new CotacaoCompra();
		String datateste3 = "15/11/2021";
		coco3.setFuncionario(func6);
		coco3.setData(datateste3);
		coco3.setStatus("Finalizada");
		CotacaoCompra coco4 = new CotacaoCompra();
		String datateste4 = "16/11/2021";
		coco4.setFuncionario(func4);
		coco4.setData(datateste4);
		coco4.setStatus("Pendente");
		cotacomrepository.save(coco3);
		cotacomrepository.save(coco4);
		CotacaoCompraItem cotaitens4 = new CotacaoCompraItem();
		cotaitens4.setCotacaocompra(coco3);
		cotaitens4.setProduto(p7);
		cotaitens4.setQuantidade(7);
		CotacaoCompraItem cotaitens5 = new CotacaoCompraItem();
		cotaitens5.setCotacaocompra(coco3);
		cotaitens5.setProduto(p6);
		cotaitens5.setQuantidade(12);
		CotacaoCompraItem cotaitens6 = new CotacaoCompraItem();
		cotaitens6.setCotacaocompra(coco3);
		cotaitens6.setProduto(p4);
		cotaitens6.setQuantidade(14);
		CotacaoCompraItem cotaitens7 = new CotacaoCompraItem();
		cotaitens7.setCotacaocompra(coco3);
		cotaitens7.setProduto(p1);
		cotaitens7.setQuantidade(12);
		CotacaoCompraItem cotaitens8 = new CotacaoCompraItem();
		cotaitens8.setCotacaocompra(coco3);
		cotaitens8.setProduto(p2);
		cotaitens8.setQuantidade(15);
		CotacaoCompraItem cotaitens9 = new CotacaoCompraItem();
		cotaitens9.setCotacaocompra(coco4);
		cotaitens9.setProduto(p3);
		cotaitens9.setQuantidade(21);
		CotacaoCompraItem cotaitens10 = new CotacaoCompraItem();
		cotaitens10.setCotacaocompra(coco4);
		cotaitens10.setProduto(p8);
		cotaitens10.setQuantidade(5);
		CotacaoCompraItem cotaitens11 = new CotacaoCompraItem();
		cotaitens11.setCotacaocompra(coco4);
		cotaitens11.setProduto(p2);
		cotaitens11.setQuantidade(32);
		cotaitensrepository.saveAll(Arrays.asList(cotaitens10,cotaitens9,cotaitens11,cotaitens4, cotaitens5, cotaitens6,cotaitens7,cotaitens8));
		FornecedorCotacaoCompra fornecedorcotacao5 = new FornecedorCotacaoCompra();
		fornecedorcotacao5.setFornecedor(f);
		fornecedorcotacao5.setData("16/11/2021");
		fornecedorcotacao5.setFrete(10.0);
		fornecedorcotacao5.setNum_pedido(235896L);
		fornecedorcotacao5.setPrecototal(532.8);
		fornecedorcotacao5.setCotacaocompra(coco4);
		fornecedorcotacao5.setStatus("Pendente");
		fornecedorcotacao5.setDataEntrega("3 dias úteis");
		FornecedorCotacaoCompra fornecedorcotacao4 = new FornecedorCotacaoCompra();
		fornecedorcotacao4.setFornecedor(f2);
		fornecedorcotacao4.setData("13/11/2021");
		fornecedorcotacao4.setFrete(25.50);
		fornecedorcotacao4.setNum_pedido(45896L);
		fornecedorcotacao4.setPrecototal(3245.0);
		fornecedorcotacao4.setCotacaocompra(coco3);
		fornecedorcotacao4.setStatus("Finalizado");
		fornecedorcotacao4.setDataEntrega("4 dias úteis");
		fornecedorCotacaoCompraRepository.saveAll(Arrays.asList(fornecedorcotacao4,fornecedorcotacao5));
		
		NotaFiscalItem notafiscalitem = new NotaFiscalItem(4,400.0, 100.0, p, nf);
		nfitemrepository.save(notafiscalitem);
		
		NotaFiscalItem notafiscalitem2 = new NotaFiscalItem(2,420.0, 210.0, p2, nf2);
		nfitemrepository.save(notafiscalitem2);
		FornecedorCotacaoCompraItem forncotacao = new FornecedorCotacaoCompraItem();
		forncotacao.setCotacaocompraitem(cotaitens);
		forncotacao.setFornecedor(f);
		forncotacao.setPrecoitem(15.0);
		forncotacao.setFornecedorCotacaocompra(fornecedorcotacao);
		forncotacao.setPreco(cotaitens.getQuantidade() * forncotacao.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao1 = new FornecedorCotacaoCompraItem();
		forncotacao1.setCotacaocompraitem(cotaitens2);
		forncotacao1.setFornecedor(f);
		forncotacao1.setPrecoitem(5.0);
		forncotacao1.setFornecedorCotacaocompra(fornecedorcotacao);
		forncotacao1.setPreco(cotaitens2.getQuantidade() * forncotacao1.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao2 = new FornecedorCotacaoCompraItem();
		forncotacao2.setCotacaocompraitem(cotaitens2);
		forncotacao2.setFornecedor(f3);
		forncotacao2.setPrecoitem(10.0);
		forncotacao2.setFornecedorCotacaocompra(fornecedorcotacao2);
		forncotacao2.setPreco(cotaitens2.getQuantidade() * forncotacao2.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao3 = new FornecedorCotacaoCompraItem();
		forncotacao3.setFornecedor(f2);
		
		forncotacao3.setFornecedorCotacaocompra(fornecedorcotacao2);
		forncotacao3.setCotacaocompraitem(cotaitens3);
		forncotacao3.setPrecoitem(8.50);
		forncotacao3.setPreco(cotaitens3.getQuantidade() * forncotacao3.getPrecoitem());
		fornecedorCotacaoRepository.saveAll(Arrays.asList(forncotacao,forncotacao1, forncotacao2, forncotacao3));
		/*
		CotacaoCompra coco3 = new CotacaoCompra();
		String datateste3 = "15/11/2021";
		coco3.setFuncionario(func6);
		coco3.setData(datateste3);
		coco3.setStatus("Pendente");
		CotacaoCompra coco4 = new CotacaoCompra();
		String datateste4 = "16/11/2021";
		coco4.setFuncionario(func4);
		coco4.setData(datateste4);
		coco4.setStatus("Pendente");
		cotacomrepository.save(coco3);
		cotacomrepository.save(coco4);
		CotacaoCompraItem cotaitens4 = new CotacaoCompraItem();
		cotaitens4.setCotacaocompra(coco3);
		cotaitens4.setProduto(p7);
		cotaitens4.setQuantidade(7);
		CotacaoCompraItem cotaitens5 = new CotacaoCompraItem();
		cotaitens5.setCotacaocompra(coco3);
		cotaitens5.setProduto(p6);
		cotaitens5.setQuantidade(12);
		CotacaoCompraItem cotaitens6 = new CotacaoCompraItem();
		cotaitens6.setCotacaocompra(coco3);
		cotaitens6.setProduto(p4);
		cotaitens6.setQuantidade(14);
		CotacaoCompraItem cotaitens7 = new CotacaoCompraItem();
		cotaitens7.setCotacaocompra(coco3);
		cotaitens7.setProduto(p1);
		cotaitens7.setQuantidade(12);
		CotacaoCompraItem cotaitens8 = new CotacaoCompraItem();
		cotaitens8.setCotacaocompra(coco3);
		cotaitens8.setProduto(p2);
		cotaitens8.setQuantidade(15);
		CotacaoCompraItem cotaitens9 = new CotacaoCompraItem();
		cotaitens9.setCotacaocompra(coco4);
		cotaitens9.setProduto(p3);
		cotaitens9.setQuantidade(21);
		CotacaoCompraItem cotaitens10 = new CotacaoCompraItem();
		cotaitens10.setCotacaocompra(coco4);
		cotaitens10.setProduto(p8);
		cotaitens10.setQuantidade(5);
		CotacaoCompraItem cotaitens11 = new CotacaoCompraItem();
		cotaitens11.setCotacaocompra(coco4);
		cotaitens11.setProduto(p2);
		cotaitens11.setQuantidade(32);
		cotaitensrepository.saveAll(Arrays.asList(cotaitens10,cotaitens9,cotaitens11,cotaitens4, cotaitens5, cotaitens6,cotaitens7,cotaitens8));
		  
	    */
		FornecedorCotacaoCompraItem forncotacao32 = new FornecedorCotacaoCompraItem();
		forncotacao32.setCotacaocompraitem(cotaitens3);
		forncotacao32.setFornecedor(fornecedorcotacao3.getFornecedor());
		forncotacao32.setPrecoitem(16.0);
		forncotacao32.setFornecedorCotacaocompra(fornecedorcotacao3);
		forncotacao32.setPreco(cotaitens3.getQuantidade() * forncotacao3.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao4 = new FornecedorCotacaoCompraItem();
		forncotacao4.setCotacaocompraitem(cotaitens7);
		forncotacao4.setFornecedor(fornecedorcotacao4.getFornecedor());
		forncotacao4.setPrecoitem(197.5);
		forncotacao4.setFornecedorCotacaocompra(fornecedorcotacao4);
		forncotacao4.setPreco(cotaitens7.getQuantidade() * forncotacao4.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao5 = new FornecedorCotacaoCompraItem();
		forncotacao5.setCotacaocompraitem(cotaitens8);
		forncotacao5.setFornecedor(fornecedorcotacao4.getFornecedor());
		forncotacao5.setPrecoitem(20.0);
		forncotacao5.setFornecedorCotacaocompra(fornecedorcotacao4);
		forncotacao5.setPreco(cotaitens8.getQuantidade() * forncotacao5.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao6 = new FornecedorCotacaoCompraItem();
		forncotacao6.setCotacaocompraitem(cotaitens9);
		forncotacao6.setFornecedor(fornecedorcotacao4.getFornecedor());
		forncotacao6.setPrecoitem(0.03);
		forncotacao6.setFornecedorCotacaocompra(fornecedorcotacao4);
		forncotacao6.setPreco(cotaitens6.getQuantidade() * forncotacao6.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao7 = new FornecedorCotacaoCompraItem();
		forncotacao7.setFornecedor(fornecedorcotacao4.getFornecedor());
		forncotacao7.setFornecedorCotacaocompra(fornecedorcotacao4);
		forncotacao7.setCotacaocompraitem(cotaitens10);
		forncotacao7.setPrecoitem(2.50);
		forncotacao7.setPreco(cotaitens10.getQuantidade() * forncotacao7.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao8 = new FornecedorCotacaoCompraItem();
		forncotacao8.setFornecedor(fornecedorcotacao4.getFornecedor());
		forncotacao8.setFornecedorCotacaocompra(fornecedorcotacao4);
		forncotacao8.setCotacaocompraitem(cotaitens11);
		forncotacao8.setPrecoitem(17.0);
		forncotacao8.setPreco(cotaitens11.getQuantidade() * forncotacao8.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao9 = new FornecedorCotacaoCompraItem();
		forncotacao9.setFornecedor(fornecedorcotacao5.getFornecedor());
		forncotacao9.setFornecedorCotacaocompra(fornecedorcotacao5);
		forncotacao9.setCotacaocompraitem(cotaitens9);
		forncotacao9.setPrecoitem(0.05);
		forncotacao9.setPreco(cotaitens9.getQuantidade() * forncotacao9.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao10 = new FornecedorCotacaoCompraItem();
		forncotacao10.setFornecedor(fornecedorcotacao5.getFornecedor());
		forncotacao10.setFornecedorCotacaocompra(fornecedorcotacao5);
		forncotacao10.setCotacaocompraitem(cotaitens10);
		forncotacao10.setPrecoitem(0.75);
		forncotacao10.setPreco(cotaitens10.getQuantidade() * forncotacao10.getPrecoitem());
		FornecedorCotacaoCompraItem forncotacao11 = new FornecedorCotacaoCompraItem();
		forncotacao11.setFornecedor(fornecedorcotacao5.getFornecedor());
		forncotacao11.setFornecedorCotacaocompra(fornecedorcotacao5);
		forncotacao11.setCotacaocompraitem(cotaitens11);
		forncotacao11.setPrecoitem(16.5);
		forncotacao11.setPreco(cotaitens11.getQuantidade() * forncotacao11.getPrecoitem());	
		fornecedorCotacaoRepository.saveAll(Arrays.asList(forncotacao32,forncotacao4,forncotacao5,forncotacao6,forncotacao7,forncotacao8,forncotacao9,forncotacao10,forncotacao11));
		OrdemCompraItem ordemcompraitens = new OrdemCompraItem();
		ordemcompraitens.setOrdemcompra(oc);
		ordemcompraitens.setPrecoitem(forncotacao1.getPrecoitem());
		ordemcompraitens.setProduto(forncotacao1.getCotacaocompraitem().getProduto());
		ordemcompraitens.setQuantidade(forncotacao1.getCotacaocompraitem().getQuantidade());
		ordemcompraitens.setPreco(ordemcompraitens.getPrecoitem()*ordemcompraitens.getQuantidade());
		ocitemrepository.save(ordemcompraitens);
		OrdemCompraItem ordemcompraitens3 = new OrdemCompraItem();
		ordemcompraitens3.setOrdemcompra(oc);
		ordemcompraitens3.setPrecoitem(forncotacao2.getPrecoitem());
		ordemcompraitens3.setProduto(forncotacao2.getCotacaocompraitem().getProduto());
		ordemcompraitens3.setQuantidade(forncotacao2.getCotacaocompraitem().getQuantidade());
		ordemcompraitens3.setPreco(ordemcompraitens3.getPrecoitem()*ordemcompraitens3.getQuantidade());
		ocitemrepository.save(ordemcompraitens3);
		OrdemCompraItem ordemcompraitens23 = new OrdemCompraItem();
		ordemcompraitens23.setOrdemcompra(oc2);
		ordemcompraitens23.setPrecoitem(forncotacao3.getPrecoitem());
		ordemcompraitens23.setProduto(forncotacao3.getCotacaocompraitem().getProduto());
		ordemcompraitens23.setQuantidade(forncotacao3.getCotacaocompraitem().getQuantidade());
		ordemcompraitens23.setPreco(ordemcompraitens23.getPrecoitem()*ordemcompraitens23.getQuantidade());
		ocitemrepository.save(ordemcompraitens23);
		OrdemCompra oc3 = new OrdemCompra();
		oc3.setData("17/11/2021");
		oc3.setFornecedor(f2);
		oc3.setNum_pedido(45896L);
		oc3.setPreco(3226.92);
		oc3.setFuncionario(func2);
		oc3.setStatus("Finalizado");
		ocrepository.save(oc3);
		OrdemCompraItem ordemcompraitens30 = new OrdemCompraItem();
		ordemcompraitens30.setOrdemcompra(oc3);
		ordemcompraitens30.setPrecoitem(forncotacao4.getPrecoitem());
		ordemcompraitens30.setProduto(forncotacao4.getCotacaocompraitem().getProduto());
		ordemcompraitens30.setQuantidade(forncotacao4.getCotacaocompraitem().getQuantidade());
		ordemcompraitens30.setPreco(ordemcompraitens30.getPrecoitem()*ordemcompraitens30.getQuantidade());
		OrdemCompraItem ordemcompraitens5 = new OrdemCompraItem();
		ordemcompraitens5.setOrdemcompra(oc3);
		ordemcompraitens5.setPrecoitem(forncotacao5.getPrecoitem());
		ordemcompraitens5.setProduto(forncotacao5.getCotacaocompraitem().getProduto());
		ordemcompraitens5.setQuantidade(forncotacao5.getCotacaocompraitem().getQuantidade());
		ordemcompraitens5.setPreco(ordemcompraitens5.getPrecoitem()*ordemcompraitens5.getQuantidade());
		OrdemCompraItem ordemcompraitens6 = new OrdemCompraItem();
		ordemcompraitens6.setOrdemcompra(oc3);
		ordemcompraitens6.setPrecoitem(forncotacao6.getPrecoitem());
		ordemcompraitens6.setProduto(forncotacao6.getCotacaocompraitem().getProduto());
		ordemcompraitens6.setQuantidade(forncotacao6.getCotacaocompraitem().getQuantidade());
		ordemcompraitens6.setPreco(ordemcompraitens6.getPrecoitem()*ordemcompraitens6.getQuantidade());
		OrdemCompraItem ordemcompraitens7 = new OrdemCompraItem();
		ordemcompraitens7.setOrdemcompra(oc3);
		ordemcompraitens7.setPrecoitem(forncotacao7.getPrecoitem());
		ordemcompraitens7.setProduto(forncotacao7.getCotacaocompraitem().getProduto());
		ordemcompraitens7.setQuantidade(forncotacao7.getCotacaocompraitem().getQuantidade());
		ordemcompraitens7.setPreco(ordemcompraitens7.getPrecoitem()*ordemcompraitens7.getQuantidade());
		OrdemCompraItem ordemcompraitens8 = new OrdemCompraItem();
		ordemcompraitens8.setOrdemcompra(oc3);
		ordemcompraitens8.setPrecoitem(forncotacao8.getPrecoitem());
		ordemcompraitens8.setProduto(forncotacao8.getCotacaocompraitem().getProduto());
		ordemcompraitens8.setQuantidade(forncotacao8.getCotacaocompraitem().getQuantidade());
		ordemcompraitens8.setPreco(ordemcompraitens8.getPrecoitem()*ordemcompraitens8.getQuantidade());
		ocitemrepository.saveAll(Arrays.asList(ordemcompraitens5,ordemcompraitens30,ordemcompraitens6,ordemcompraitens7,ordemcompraitens8));
		NotaFiscal nf3 = new NotaFiscal();
		nf3.setData("17/11/2021");
		nf3.setNum_pedido(45896L);
		nf3.setFornecedor(f);
		nf3.setPrecoTotal(3226.92);
		nf3.setNum_nota(23);
		nf3.setFuncionario(func2);
		nf3.setHora("09:52");
		nfrepository.save(nf3);
		NotaFiscalItem notafiscalitem4 = new NotaFiscalItem();
		notafiscalitem4.setNotaFiscal(nf3);
		notafiscalitem4.setPreco(ordemcompraitens30.getPreco());
		notafiscalitem4.setPrecoitem(ordemcompraitens30.getPrecoitem());
		notafiscalitem4.setProduto(ordemcompraitens30.getProduto());
		notafiscalitem4.setQuantidade(ordemcompraitens30.getQuantidade());
		NotaFiscalItem notafiscalitem5 = new NotaFiscalItem();
		notafiscalitem5.setNotaFiscal(nf3);
		notafiscalitem5.setPreco(ordemcompraitens5.getPreco());
		notafiscalitem5.setPrecoitem(ordemcompraitens5.getPrecoitem());
		notafiscalitem5.setProduto(ordemcompraitens5.getProduto());
		notafiscalitem5.setQuantidade(ordemcompraitens5.getQuantidade());
		NotaFiscalItem notafiscalitem6 = new NotaFiscalItem();
		notafiscalitem6.setNotaFiscal(nf3);
		notafiscalitem6.setPreco(ordemcompraitens6.getPreco());
		notafiscalitem6.setPrecoitem(ordemcompraitens6.getPrecoitem());
		notafiscalitem6.setProduto(ordemcompraitens6.getProduto());
		notafiscalitem6.setQuantidade(ordemcompraitens6.getQuantidade());
		NotaFiscalItem notafiscalitem7 = new NotaFiscalItem();
		notafiscalitem7.setNotaFiscal(nf3);
		notafiscalitem7.setPreco(ordemcompraitens7.getPreco());
		notafiscalitem7.setPrecoitem(ordemcompraitens7.getPrecoitem());
		notafiscalitem7.setProduto(ordemcompraitens7.getProduto());
		notafiscalitem7.setQuantidade(ordemcompraitens7.getQuantidade());
		NotaFiscalItem notafiscalitem8 = new NotaFiscalItem();
		notafiscalitem8.setNotaFiscal(nf3);
		notafiscalitem8.setPreco(ordemcompraitens8.getPreco());
		notafiscalitem8.setPrecoitem(ordemcompraitens8.getPrecoitem());
		notafiscalitem8.setProduto(ordemcompraitens8.getProduto());
		notafiscalitem8.setQuantidade(ordemcompraitens8.getQuantidade());
		nfitemrepository.saveAll(Arrays.asList(notafiscalitem4,notafiscalitem5,notafiscalitem6,notafiscalitem7,notafiscalitem8));
	}
}
